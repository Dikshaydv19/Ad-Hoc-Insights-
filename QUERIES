

## 1 Provide the list of markets in which customer "Atliq Exclusive" operates its business in the APAC region.
##Query 
select distinct market
from dim_customer
where customer = "Atliq Exclusive" and region = "APAC";
------------------------------------------------------------------------------------------------------------------------------------------------------
##2 What is the percentage of unique product increase in 2021 vs 2020? the final output contains these fields,
##unique_products_2020,unique_products_2021,percentage_chg
#QUERY
WITH unique_2020 as(
					select count(distinct p.product_code) as unique_product_2020
                       from fact_sales_monthly s
                       join dim_product p 
                       on p.product_code = s.product_code
                       where fiscal_year = 2020),
				unique_2021 as(
						select count(distinct p.product_code) as unique_product_2021
                       from fact_sales_monthly s
                       join dim_product p 
                       on p.product_code = s.product_code
                       where fiscal_year = 2021)
				select *,
				round(((unique_product_2021 - unique_product_2020)/unique_product_2020)*100,2) as percentage_chg
                from unique_2020, unique_2021
------------------------------------------------------------------------------------------------------------------------------------------------------
##3. Provide a report with all the unique product counts for each segament and sorth them in desecnding order of product counts.the final output chains 2 fields,segment , and product_count.
##QUERY
SELECT segment, count(distinct product_code) as product_count
from dim_product
group by segment
order by product_count desc
------------------------------------------------------------------------------------------------------------------------------------------------------
##4. Follow up: which segment had the most increase in unique products in 2021 vs 2020? the final output these fields,
##segment, product_count_2020,product_count_2021 difference.
##QUERY
WITH PRODUCT_2020 AS (
            SELECT p.segment,count(DISTINCT p.product_code) as product_count_2020
            from dim_product p
            join fact_sales_monthly s 
            on p.product_code = s.product_code
            where fiscal_year =2020
            group by segment
            order by product_count_2020 desc),
	PRODUCT_2021 AS (
                SELECT p.segment, count(distinct p.product_code) as product_count_2021
                from dim_product p
                join fact_sales_monthly s
                on p.product_code = s.product_code
                where fiscal_year = 2021
                group by segment
                order by product_count_2021 desc)
		select a.segment,
                        a.product_count_2020, b.product_count_2021,
                        b.product_count_2021 - a.product_count_2020 as difference,
round(((b.product_count_2021- a.product_count_2020)/a.product_count_2020)*100,2) AS percentage_change
from product_2020 a
join product_2021 b
on a.segment = b.segment
------------------------------------------------------------------------------------------------------------------------------------------------------
##5.Get the products that have the highest and lowest manufacturing costs. The final output shouldd contain these fields,
##product_code , product, manufacturing_cost.
##QUERY
SELECT p.product, p.product_code, 
manufacturing_cost
FROM fact_manufacturing_cost m
JOIN dim_product p
ON p.product_code = m.product_code
where manufacturing_cost = (
 SELECT MAX(manufacturing_cost)
 FROM fact_manufacturing_cost)
 UNION
 SELECT p.product, p.product_code, manufacturing_cost
 FROM fact_manufacturing_cost m
JOIN dim_product p
ON p.product_code = m.product_code
where manufacturing_cost = (
 SELECT Min(manufacturing_cost)
 FROM fact_manufacturing_cost)
------------------------------------------------------------------------------------------------------------------------------------------------------
##6.Generate a report which contains the top 5 customers who received an average high pre_invoice_discount_pct for the fiscal year 2021 and in the Indian market. The final output contains these fields,
##customer_code, customer, average_discount_percentage.
##QUERY
SELECT c.customer_code, c.customer, 
     round(AVG(pre.pre_invoice_discount_pct)*100,2) as average_discount_pct
     from fact_sales_monthly s
     join dim_customer c
     on s.customer_code = c.customer_code
     join fact_pre_invoice_deductions pre
     on s.customer_code = pre.customer_code
     and s.fiscal_year = pre.fiscal_year
     where s.fiscal_year = 2021 AND c.market = "India"
     group by c.customer, c.customer_code 
     order by average_discount_pct desc
     limit 5
------------------------------------------------------------------------------------------------------------------------------------------------------
##7. Get the complete report of the gross sales amount for the customer "Atliq Exclusive" for each month. This analysis helps to get an idea of low and high performing months and
##take strategic decisions. The final report contains these columns : Month, year, gross sales amount.
##QUERY
 SELECT MONTH(date) as Month,
        YEAR(date) as Year,
	SUM(s.sold_quantity*g.gross_price) as gross_sales_amt
    FROM fact_sales_monthly s
    JOIN dim_customer c
    ON c.customer_code = s.customer_code
    JOIN fact_gross_price g
    ON g.fiscal_year = s.fiscal_year
    AND g.product_code = s.product_code
    WHERE c.customer = "AtliQ Exclusive"
    Group by Month, Year
    Order by Year
------------------------------------------------------------------------------------------------------------------------------------------------------
##8.In which quarter of 2020, got the maximum total_sold_quantity? The final
##output contains these fields sorted by the total_sold_quantity,Quarter,total_sold_quantity.
SELECT CASE 
WHEN MONTH(date) in (9,10,11) then 'Q1'
WHEN MONTH(date) in (12,1,2) then 'Q2'
WHEN MONTH(date) in (3,4,5) then 'Q3'
WHEN MONTH(date) in (6,7,8) then 'Q4'
END AS QUATER, 
SUM(sold_quantity) as total_sold_quantity
FROM fact_sales_monthly
WHERE fiscal_year = 2020
GROUP BY QUATER
ORDER BY  total_sold_quantity DESC
------------------------------------------------------------------------------------------------------------------------------------------------------
##9.Which channel helped to bring more gross sales in the fiscal year 2021 and the percentage of contribution? The final output contains these fields,
#channel, gross_sales_mln,percentage.
WITH gross_sale AS(
                   SELECT channel,
                   ROUND(SUM(sold_quantity*gross_price)/1000000,2) as gross_sales_mln
                   FROM fact_sales_monthly s
                   JOIN dim_customer c
                   ON c.customer_code = s.customer_code
                   JOIN fact_gross_price g
                   ON g.product_code = s.product_code 
                   AND g.fiscal_year = s.fiscal_year
                   WHERE s.fiscal_year = 2021
                   GROUP BY channel
                    ORDER BY gross_sales_mln DESC)
		SELECT *,
        gross_sales_mln*100/sum(gross_sales_mln) OVER() AS pct
        FROM gross_sale
------------------------------------------------------------------------------------------------------------------------------------------------------
##.10. Get the Top 3 products in each division that have a high total_sold_quantity in the fiscal_year 2021? The final output contains these
#fields,division,product_code,product,total_sold_quantity,rank_order
WITH total_sold AS(SELECT
                       p.division, p.product_code, p.product,
		sum(s.sold_quantity) as total_quantity
        FROM fact_sales_monthly s
        JOIN dim_product p
        ON s.product_code = p.product_code
        WHERE fiscal_year = 2021
        GROUP BY division, product, product_code),
        cte2 AS(
                 SELECT *,
                 rank() over(partition by division ORDER BY total_quantity DESC) as rnk
				FROM total_sold)
		SELECT * FROM cte2 WHERE rnk <=3
        LIMIT 9
        
